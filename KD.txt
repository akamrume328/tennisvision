タイトル（翻訳）
Positive Anchor Area Merge Algorithm：YOLOv8に基づく果物検出タスク向け知識蒸留アルゴリズム

概要（Abstract）
農業分野において、果物の対象検出に機械ビジョン技術を活用することは、果物の成長モニタリング、収穫量予測、果実選別など、多くの応用可能性と研究価値を持っています。YOLOv8モデルは、物体検出分野において最新のモデルであり、高い実行効率と検出精度を誇ります。しかし、果物の検出、すなわち画像中の果実の数え上げや位置特定のようなタスクにおいては、標準のCOCOデータセットでの性能と比べて精度が明らかに低下する傾向があります。

この問題を解決するため、本研究では大規模な教師モデルを用いて小規模な生徒モデルの訓練を導く「知識蒸留」手法を導入します。そして、YOLOv8に特化した知識蒸留手法を提案し、「Positive Anchor Area Merge Algorithm（正のアンカー領域統合アルゴリズム）」を活用して果物認識タスクの検出精度を向上させます。

我々が構築した独自の果物データセット（各カテゴリあたり3000枚以上の画像を含む）上で、提案モデルと他の最新モデルを比較した結果、低リソースの消費を維持しつつ、mAP(50)は99.47%に達し、他モデル（99.1〜99.3%）を上回りました。また、アブレーション実験により正例サンプル領域の分割が実用的に有効であることも示されました。最後に、本モデルを組み込みシステム上にデプロイし、現場画像のリアルタイム検出を行いました。

キーワード（Index Terms）
ディープラーニング、物体検出、YOLO、知識蒸留、アンカー割り当て、組み込みシステム

第1章：はじめに（Introduction）
現代農業において、果物の品質検査は食品安全の確保および市場競争力の強化にとって極めて重要なプロセスです。従来の果物検査方法は、視覚による手作業チェックや物理・化学的試験に依存しており、これらは時間と労力を要し、かつ人的要因による誤りが生じやすいという問題があります。たとえば、熟練者による目視検査では熟度や鮮度の判定が必要ですが、これには主観的要素が入り込むため、正確性や再現性が損なわれます。

一方、ディープラーニングモデルの活用により、果物の収穫、選別、包装工程の自動化を実現することで、運用コストの削減と生産効率の向上が可能となります。
第2章：関連研究（Related Work）
この章では、知識蒸留アルゴリズムおよびその主なアプローチを紹介し、それぞれの長所と短所を明らかにします。さらに、アンカー割り当て手法、特にYOLOv8の正のアンカー割り当てアルゴリズムについて詳述します。

A. 知識蒸留（Knowledge Distillation）
知識蒸留とは、機械学習分野で広く使われている重要な技術です。その中核的なアイデアは、性能の高い複雑なモデル（教師モデル）から、より小規模で単純なモデル（生徒モデル）へ知識を転送することにあります。生徒モデルは教師モデルの出力や振る舞いを模倣することにより、より優れた汎化性能を発揮できるようになります。

1) 知識蒸留アルゴリズムの基本
知識蒸留の原理は、教師モデルと生徒モデルの出力（それぞれviとzi）に対してsoftmax関数を適用し、温度パラメータTを用いて出力を平滑化することで実現されます。これにより、両者の出力のクロスエントロピー誤差を損失関数として用い、勾配を通じて生徒モデルを訓練します。

ただし、従来の知識蒸留は分類問題には適していますが、物体検出のようなバウンディングボックスを伴うタスクには不向きであり、YOLOのようなsigmoidベースのモデルには適用が困難という問題があります。これらの課題に対応するため、本研究では別の手法を導入しています。

2) 知識伝達の方法
知識蒸留の方法は、大きく以下の5種類に分類されます：

ラベル知識（最終出力の模倣）

中間層知識（中間層の特徴マップの模倣）

パラメータ知識（モデルの重みの模倣）

構造化知識（層間の関係の模倣）

グラフ構造知識（構造化知識の高次拡張）

本論文ではラベル知識に基づいた方法をベースとしつつ、「正のアンカー領域の分割」という空間的情報を導入することで、性能向上を図っています。

B. アンカー割り当てアルゴリズム
アンカー割り当ては、物体検出において、候補領域（アンカーボックス）と正解領域（ground truth box）を対応付け、効果的な学習サンプルを提供するプロセスです。

従来はIoU（Intersection over Union）値に基づく固定閾値方式が主流でしたが、近年はモデルの学習状態に応じた動的割り当て戦略が多く提案されています。代表的な手法には以下のようなものがあります：

AutoAssign：完全微分可能な重み付けメカニズムで、正負サンプルを自動判定

Dual Weighting：分類スコアと位置予測の整合性に基づく重み付け

SimOTA（YOLOX）：分類損失と回帰損失に基づいた動的マッチング

YOLOv8のTaskAlignedAssigner：分類と回帰のスコアを組み合わせた重み付きスコアにより正例を選定

YOLOv8では、アンカー重みtを以下の式で計算します：

  t = s^α × u^β

ここで、sは分類スコア、uはIoU、αとβは超パラメータ（それぞれ0.5と0.6）です。

この重みに基づいて正のアンカーが選定され、それ以外は負のアンカーとなります。以降の損失計算では、正のアンカー領域のみが主に使用されます。
第3章：提案手法（Methodology）
本章では、我々が提案する方法について詳細に説明します。本手法は大きく3つの部分に分かれます（図1を参照）：

YOLOv8に基づく並列知識蒸留ネットワークの構築

正のアンカー割り当て手法に基づいた「Positive Anchor Area Merge Algorithm」の設計

知識蒸留に対応した損失関数の設計

A. 蒸留ネットワークの設計
YOLOv8の基本構造は「Backbone（特徴抽出）」「Neck（特徴融合）」「Head（予測）」の3つから構成されています。
入力画像（640×640ピクセル）は、Conv層とC2f層を通じて複数の特徴マップに変換され、最終的に3つの異なる解像度のマップ（20×20, 40×40, 80×80）を生成します。

並列蒸留構造の導入
YOLOv8の通常構造では単一の順序的処理が行われますが、知識蒸留のためには「教師ネットワーク」と「生徒ネットワーク」を並列に動かす必要があります。

そこで以下のような改良を加えました：

Emptyレイヤー：同一の画像入力を保持

Distill Headレイヤー：教師と生徒の予測結果を統合

この構造により、画像は教師・生徒両方のネットワークを同時に通過し、最終的に(2, 8400, M)というテンソル形式の予測結果を出力します（8400は全アンカーポイント数、Mはクラス数）。

B. Positive Anchor Area Merge Algorithm（正のアンカー領域統合アルゴリズム）
YOLOv8の正のアンカー割り当てにおいて、教師モデルと生徒モデルの予測をそれぞれ計算し、それぞれの「正のアンカー領域」を次の4つに分類します（図3を参照）：

共通領域（Area 1）：教師・生徒の両方で正例

生徒専用領域（Area 2）：生徒のみが正例

教師専用領域（Area 3）：教師のみが正例

負例領域（Area 4）：両者とも負例

この領域分割によって、訓練の進行に合わせて以下のような学習が実現されます（図4参照）：

初期段階：教師の情報により学習を加速

中盤：教師・生徒双方からの学習が進行

後半：生徒が独立して学習を進めるよう調整（教師の重みを減少）

この方式により、蒸留訓練の各ステージで柔軟に学習戦略を適応でき、安定した精度向上が図れます。

C. 蒸留用損失関数の設計
YOLOv8では損失関数が以下の3つで構成されます：

分類損失（Loss_cls）：BCE（Binary Cross Entropy）

ボックス損失（Loss_box）：IoUベース

分布フォーカル損失（Loss_dfl）：Distribution Focal Loss（DFL）

提案手法では、これらをPAAMAに基づいてさらに細分化し、計10種類の損失項（Area1〜4ごとに分類、ボックス、DFL）として計算します。

各損失の概要
Area 1：教師＋生徒の知識を両方学習（重み付きで組み合わせ）

Area 2, 3：それぞれのモデルからのみ学習

Area 4：分類損失のみ（負例として抑制）

各損失の計算には以下の式が用いられます：

分類損失は、生徒と教師の出力を温度パラメータT付きのsigmoid関数で平滑化し、クロスエントロピーを計算

ボックス損失とDFLは、Area 4 を除いて計算対象とし、教師または生徒の予測に基づく損失を合算

最終損失関数
以下のように各部分を重み付きで統合して最終的な損失関数とします：

  Loss' = C1' × Loss_cls' + C2' × Loss_box' + C3' × Loss_dfl'

（C1', C2', C3'はチューニング済みのハイパーパラメータ）
第4章：実験分析（Experiment Analysis）
本章では、前章で提案した手法の有効性を実証するために、詳細な実験を行います。

A. 実験設定と評価指標
ハードウェア・ソフトウェア環境
CPU：Intel Core i7-11800H（16コア、2.3GHz）

RAM：16GB

GPU：NVIDIA GeForce RTX 3060（CUDA 11.7）

フレームワーク：YOLOv8 v1.34（Ultralytics製）

言語環境：Python 3.10.14 + PyTorch 2.0.1 + cuDNN 11.7

トレーニング設定
初期学習率：0.01

最適化アルゴリズム：SGD（モメンタム0.937）

バッチサイズ：16

学習率減衰係数：0.0005

蒸留損失の係数：C1=0.7, C2=1.1, C3=1.0

教師モデル：YOLOv8s

生徒モデル：YOLOv8n

エポック数：300

データセット
独自構築した果物検出データセットを使用。各カテゴリ（リンゴ、バナナ、オレンジ）に3000枚以上の画像を含む。撮影は果樹園や市場にて、多様な角度・季節・照明条件で行われ、鮮明度やラベル精度も確保されています。データ拡張（回転、拡大縮小、切り抜き）も実施。

評価指標
Precision（適合率）

Recall（再現率）

mAP(50)：IoU > 0.5 における平均適合率

mAP(50-90)：IoU閾値0.5〜0.9の範囲の平均mAP

B. 最先端モデルとの比較
モデル選定の基準：
YOLO系で構成・損失関数が類似

モデルサイズが軽量（数十MB）

実装の互換性が高い

主な比較結果（表2に基づく）：
YOLOv8-lite（提案モデル）：

モデルサイズ：24MB（YOLOv8nと同等）

パラメータ数：3.15M（2番目に小さい）

FLOPs：8.7G（最小クラス）

推論速度：11.7ms（最速）

Precision：sモデルに匹敵、nモデルより優れる

Recall：全モデル中最高

mAP(50)：最高（99.47%）

mAP(50-90)：中程度（複雑なシーンでは不利）

トレーニング中の精度推移（図6）
mAP(50)：

提案モデルは早期（50エポック以内）に高精度へ到達し、最も早く収束

mAP(50-90)：

他モデルと大差なし、むしろ若干の不安定さあり（多様なパラメータ導入が影響）

C. ロス関数の変化（図7）
トレーニング中の比較：
DFL・分類ロス（cls）：他モデルより大きい（教師のロスも含まれるため）

ボックスロス（box）：他モデルより小さい（およそ75%）

➡ 提案モデルは分類性能を一部犠牲にして、位置予測精度（ローカライゼーション）を大幅に向上。

バリデーション中の比較：
DFL・boxロスの収束速度：提案モデルが最も速い

分類ロス（cls）の改善：限定的

D. アブレーションスタディ（表3）
PAAMAで定義された各領域（共通、生徒専用、教師専用）における損失計算の有無を検証：

共通領域（Area 1）：

Precision（適合率）とmAP(50)を大きく向上

生徒のみの領域（Area 2）：

全指標で向上、最もバランスが良い

教師のみの領域（Area 3）：

Recall（再現率）に寄与、mAP(50)も改善、mAP(50-90)にはやや負影響

結論：正のアンカー領域の分割とそれに応じた損失設計が、学習と精度向上に効果的であることが確認された。

E. 実地応用とデプロイ（図8・図9）
テストケース：果物3種（リンゴ、バナナ、オレンジ）を用いて、照明・方向・周囲環境の変化に対応する画像処理を行い、精度を検証。

結果：黒枠や反転、明度調整を加えても、果物を高精度に検出可能。

組み込みデバイスへの導入：

Raspberry Pi 4Bに実装、5MPカメラを使用してリアルタイム検出を実現

推論速度：1フレームあたり約90ms

比較結果：YOLOv8nよりも信頼度が高く、漏れ検出を防止できた
第5章：結論（Conclusion）
本論文では、YOLOv8をベースとした新しい知識蒸留アルゴリズム「Positive Anchor Area Merge Algorithm（PAAMA）」を提案しました。この手法は、YOLOv8の高性能な検出能力を活かしつつ、正のアンカー領域の統合という独自の蒸留手法を導入することで、生徒モデルの検出性能を大幅に向上させることを目的としています。

本手法では以下のような特徴があります：

YOLOv8構造に基づき、並列蒸留ネットワークを構築

教師モデルと生徒モデルの正のアンカー領域を統合

蒸留対応の損失関数（10項目構成）を設計

軽量かつ高速でありながら、**高精度（mAP(50)=99.47%）**を実現

また、本手法の有効性を評価するため、以下の実験を行いました：

最先端モデルとの比較実験
 → 提案モデルはリソース消費を抑えつつ、mAP(50)で最良の性能を達成

アブレーションスタディ
 → アンカー領域の分割が訓練効率および検出性能の向上に有効であることを実証

組み込み環境でのデプロイ
 → Raspberry Pi上でリアルタイム動作が可能であり、実用的な応用にも対応

今後の課題と展望
提案手法は初期段階において非常に有望な成果を示しましたが、以下の点においてさらなる改善の余地があります：

微細な物体差異への感度向上
 → 類似オブジェクトの識別性能を高める必要がある

誤検出（False Positives）の削減
 → 特に実世界環境における信頼性向上が課題

未知環境への適応性の強化
 → 難易度の高い実環境でも頑健に動作するアルゴリズムへと発展させる

本研究成果は、今後の知識蒸留や物体検出研究における発展の基盤となり得ると確信しています。
